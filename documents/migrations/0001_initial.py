# Generated by Django 3.0.6 on 2020-05-10 22:53

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import documents.models
import simple_history.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('events', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Document',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('document_type', models.CharField(choices=[('ByLaws', 'ByLaws'), ('Club Registration', 'Club Registration'), ('Registration', 'Registration'), ('Results', 'Results'), ('Agenda', 'Agenda'), ('Minutes', 'Minutes'), ('Match Play', 'Match Play'), ('Match Play Brackets', 'Match Play Brackets'), ('Financial', 'Financial'), ('Standing Orders', 'Standing Orders'), ('Tee Times', 'Tee Times'), ('Other', 'Other')], max_length=20, verbose_name='Document Type')),
                ('year', models.IntegerField(blank=True, null=True, verbose_name='Golf Season')),
                ('title', models.CharField(max_length=120, verbose_name='Title')),
                ('file', models.FileField(upload_to=documents.models.document_directory_path, verbose_name='File')),
                ('created_by', models.CharField(max_length=100, verbose_name='Created By')),
                ('last_update', models.DateTimeField(auto_now=True)),
                ('tournament', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='documents', to='events.Tournament', verbose_name='Tournament')),
            ],
        ),
        migrations.CreateModel(
            name='Photo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('photo_type', models.CharField(choices=[('Committee', 'Committee'), ('Golf Course', 'Golf Course'), ('Tournament Winners', 'Tournament Winners'), ('Tournament Photos', 'Tournament Photos'), ('Other', 'Other')], max_length=20, verbose_name='Type')),
                ('year', models.IntegerField(default=0, verbose_name='Golf Season')),
                ('caption', models.CharField(blank=True, max_length=240, verbose_name='Caption')),
                ('raw_image', models.ImageField(upload_to=documents.models.photo_directory_path, verbose_name='Image')),
                ('created_by', models.CharField(max_length=100, verbose_name='Created By')),
                ('last_update', models.DateTimeField(auto_now=True)),
                ('tournament', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='photos', to='events.Tournament', verbose_name='Tournament')),
            ],
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=40, verbose_name='Tag')),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='PhotoTag',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('document', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tags', to='documents.Photo', verbose_name='Photo')),
                ('tag', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='documents.Tag', verbose_name='Tag')),
            ],
        ),
        migrations.CreateModel(
            name='HistoricalPhoto',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('photo_type', models.CharField(choices=[('Committee', 'Committee'), ('Golf Course', 'Golf Course'), ('Tournament Winners', 'Tournament Winners'), ('Tournament Photos', 'Tournament Photos'), ('Other', 'Other')], max_length=20, verbose_name='Type')),
                ('year', models.IntegerField(default=0, verbose_name='Golf Season')),
                ('caption', models.CharField(blank=True, max_length=240, verbose_name='Caption')),
                ('raw_image', models.TextField(max_length=100, verbose_name='Image')),
                ('created_by', models.CharField(max_length=100, verbose_name='Created By')),
                ('last_update', models.DateTimeField(blank=True, editable=False)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('tournament', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='events.Tournament', verbose_name='Tournament')),
            ],
            options={
                'verbose_name': 'historical photo',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalDocument',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('document_type', models.CharField(choices=[('ByLaws', 'ByLaws'), ('Club Registration', 'Club Registration'), ('Registration', 'Registration'), ('Results', 'Results'), ('Agenda', 'Agenda'), ('Minutes', 'Minutes'), ('Match Play', 'Match Play'), ('Match Play Brackets', 'Match Play Brackets'), ('Financial', 'Financial'), ('Standing Orders', 'Standing Orders'), ('Tee Times', 'Tee Times'), ('Other', 'Other')], max_length=20, verbose_name='Document Type')),
                ('year', models.IntegerField(blank=True, null=True, verbose_name='Golf Season')),
                ('title', models.CharField(max_length=120, verbose_name='Title')),
                ('file', models.TextField(max_length=100, verbose_name='File')),
                ('created_by', models.CharField(max_length=100, verbose_name='Created By')),
                ('last_update', models.DateTimeField(blank=True, editable=False)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('tournament', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='events.Tournament', verbose_name='Tournament')),
            ],
            options={
                'verbose_name': 'historical document',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='DocumentTag',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('document', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tags', to='documents.Document', verbose_name='Document')),
                ('tag', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='documents.Tag', verbose_name='Tag')),
            ],
        ),
    ]
